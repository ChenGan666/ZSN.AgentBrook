{"version":3,"file":"js/app.fe4d40e5.js","mappings":"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","sources":["webpack://workflow/./src/components/WorkFlow.vue","webpack://workflow/./src/common/API.js","webpack://workflow/./src/common/Tools.js","webpack://workflow/./src/components/ToolIcon.vue","webpack://workflow/./src/components/ToolBox.vue","webpack://workflow/./src/components/ToolBox.vue?16f5","webpack://workflow/./src/components/WorkFlowInfo.vue","webpack://workflow/./src/components/WorkFlowInfo.vue?3b82","webpack://workflow/./src/components/WorkFlowData.vue","webpack://workflow/./src/components/WorkFlowData.vue?0f79","webpack://workflow/./src/components/SliderInput.vue","webpack://workflow/./src/components/SliderInput.vue?acb5","webpack://workflow/./src/components/Node/LargeModelNode.vue","webpack://workflow/./src/components/Node/LargeModelNode.vue?1493","webpack://workflow/./src/components/Node/PluginsNode.vue","webpack://workflow/./src/components/Node/PluginsNode.vue?2011","webpack://workflow/./src/components/Node/StartNode.vue","webpack://workflow/./src/components/Node/StartNode.vue?6c70","webpack://workflow/./src/components/Node/EndNode.vue","webpack://workflow/./src/components/Node/EndNode.vue?5dfb","webpack://workflow/./src/components/Node/SelectorNode.vue","webpack://workflow/./src/components/Node/SelectorNode.vue?de46","webpack://workflow/./src/components/Node/KnowledgeBaseNode.vue","webpack://workflow/./src/components/Node/KnowledgeBaseNode.vue?17c1","webpack://workflow/./src/components/Node/TimeTrigger.vue","webpack://workflow/./src/components/Node/TimeTrigger.vue?76d8","webpack://workflow/./src/components/Node/AgentNode.vue","webpack://workflow/./src/components/Node/AgentNode.vue?26d7","webpack://workflow/./src/components/Node/MainAINode.vue","webpack://workflow/./src/components/Node/MainAINode.vue?4834","webpack://workflow/./src/components/Node/ReporterNode.vue","webpack://workflow/./src/components/Node/ReporterNode.vue?aa9d","webpack://workflow/./src/components/Edge/CustomEdge.vue","webpack://workflow/./src/components/Edge/CustomEdge.vue?d17b","webpack://workflow/./src/components/WorkFlow.vue?9fb6","webpack://workflow/./src/App.vue","webpack://workflow/./src/App.vue?7ccd","webpack://workflow/./src/main.js","webpack://workflow/webpack/bootstrap","webpack://workflow/webpack/runtime/chunk loaded","webpack://workflow/webpack/runtime/compat get default export","webpack://workflow/webpack/runtime/define property getters","webpack://workflow/webpack/runtime/global","webpack://workflow/webpack/runtime/hasOwnProperty shorthand","webpack://workflow/webpack/runtime/make namespace object","webpack://workflow/webpack/runtime/jsonp chunk loading","webpack://workflow/webpack/startup"],"sourcesContent":["<script>\nimport { ref } from \"vue\";\nimport { VueFlow, useVueFlow, MarkerType } from \"@vue-flow/core\";\nimport { Background } from \"@vue-flow/background\";\nimport { ControlButton, Controls } from \"@vue-flow/controls\";\nimport { MiniMap } from \"@vue-flow/minimap\";\n\nimport Api from \"../common/API.js\";\nimport Tools from \"../common/Tools.js\";\nimport ToolIcon from \"./ToolIcon.vue\";\nimport ToolBox from \"./ToolBox.vue\";\nimport WorkFlowInfo from \"./WorkFlowInfo.vue\";\nimport WorkFlowData from \"./WorkFlowData.vue\";\nimport LargeModelNode from \"./Node/LargeModelNode.vue\";\nimport PluginsNode from \"./Node/PluginsNode.vue\";\nimport StartNode from \"./Node/StartNode.vue\";\nimport EndNode from \"./Node/EndNode.vue\";\nimport SelectorNode from \"./Node/SelectorNode.vue\";\nimport KnowledgeBaseNode from \"./Node/KnowledgeBaseNode.vue\";\n\nimport TimeTrigger from \"./Node/TimeTrigger.vue\";\nimport AgentNode from \"./Node/AgentNode.vue\";\nimport MainAINode from \"./Node/MainAINode.vue\";\nimport ReporterNode from \"./Node/ReporterNode.vue\";\n\nimport CustomEdge from \"./Edge/CustomEdge.vue\";\nimport { notify } from \"@kyvg/vue3-notification\";\n\nvar workflow = null;\n\nexport default {\n  name: \"WorkFlow\",\n  props: {\n    workflow_data: {\n      title: \"智能助理\",\n      info: null,\n      WorkFlowID: \"\",\n      MainID: \"\",\n      MainType: 2,\n    },\n  },\n  components: {\n    VueFlow,\n    Background,\n    MiniMap,\n    ToolBox,\n    WorkFlowInfo,\n    Controls,\n    ToolIcon,\n    ControlButton,\n    WorkFlowData,\n    LargeModelNode,\n    PluginsNode,\n    StartNode,\n    EndNode,\n    SelectorNode,\n    TimeTrigger,\n    AgentNode,\n    MainAINode,\n    ReporterNode,\n    CustomEdge,\n    KnowledgeBaseNode,\n  },\n  setup() {\n    const {\n      onInit,\n      onNodeDragStop,\n      onConnect,\n      addEdges,\n      setViewport,\n      toObject,\n      onNodesChange,\n      applyNodeChanges,\n      onEdgesChange,\n      applyEdgeChanges,\n    } = useVueFlow();\n\n    onInit((vueFlowInstance) => {\n      vueFlowInstance.fitView();\n    });\n    onNodeDragStop(() => {\n      workflow.nodes = toObject().nodes;\n    });\n\n    onConnect((connection) => {\n      connection.id = Tools.guid();\n      connection.markerEnd = MarkerType.ArrowClosed;\n\n      connection.style = \"stroke-width: 3;stroke:#3e47de;\";\n      addEdges(connection);\n      workflow.edges = toObject().edges;\n    });\n\n    onNodesChange((changes) => {\n      const nextChanges = [];\n      for (const change of changes) {\n        if (change.type === \"remove\") {\n          var node = workflow.nodes.filter((item) => item.id === change.id);\n          if (node.length > 0) {\n            if (node[0].type === \"Start\") {\n              notify({ type: \"warn\", title: \"开始节点不能删除\" });\n              continue;\n            } else if (node[0].type === \"End\") {\n              notify({ type: \"warn\", title: \"结束节点不能删除\" });\n              continue;\n            } else if (node[0].type === \"MainAI\") {\n              notify({ type: \"warn\", title: \"应用用主控AI不能删除\" });\n              continue;\n            } else if (node[0].type === \"Reporter\") {\n              notify({ type: \"warn\", title: \"应用记录员不能删除\" });\n              continue;\n            }else {\n              nextChanges.push(change);\n            }\n          }\n        } else {\n          nextChanges.push(change);\n        }\n      }\n      applyNodeChanges(nextChanges);\n    });\n\n    onEdgesChange((changes) => {\n      const nextChanges = [];\n      for (const change of changes) {\n        if (change.type === \"remove\") {\n          if (workflow.selectedNode) {\n            continue;\n          } else {\n            nextChanges.push(change);\n          }\n        } else {\n          nextChanges.push(change);\n        }\n      }\n      applyEdgeChanges(nextChanges);\n    });\n\n    const _setViewport = ref(setViewport);\n    const _toObject = ref(toObject);\n    return { _setViewport, _toObject };\n  },\n  mounted() {\n    let _this = this;\n    this.init();\n    this.startInterval();\n    workflow = _this;\n  },\n  unmount() {\n    this.stopInterval();\n  },\n  data() {\n    return {\n      ShowNodeBox: false,\n      workflow: { title: this.workflow_data.title, info: this.workflow_data.info },\n      info: {},\n      pluginsList: [], //ref(Plugins),\n      largeModelList: [], // ref(LargeModel),\n      knowledgeBaseList: [], // ref(KnowledgeBase),\n      agentList: [], // ref(Agent),\n      nodes: [], // ref(initialNodes),\n      edges: [], // ref(initialEdges),\n      dark: ref(false),\n      selectedNode: null,\n      selectEdge: null,\n      connectionLineStyle: {\n        stroke: \"#ddd\",\n        strokeWidth: 3,\n      },\n\n      intervalId: null,\n    };\n  },\n  methods: {\n    logToObject() {\n      this.save();\n    },\n    resetTransform() {\n      this._setViewport({ x: 0, y: 0, zoom: 1 });\n    },\n    onShowNodeBox() {\n      this.ShowNodeBox = !this.ShowNodeBox;\n    },\n    toggleDarkMode() {\n      this.dark = !this.dark;\n    },\n    addNode(nodeObj) {\n      console.log(nodeObj);\n      this.nodes.push(nodeObj);\n    },\n    saveNode(nodeObj) {\n      this.nodes = this.nodes.map((item) => {\n        if (item.id == nodeObj.id) {\n          item.data = nodeObj.data;\n        }\n        return item;\n      });\n    },\n    nodeClick(node) {\n      this.selectedNode = node;\n      this.selectEdge = null;\n    },\n    edgeClick(edge) {\n      this.selectedNode = null;\n      this.selectEdge = edge;\n    },\n    startInterval() {\n      this.intervalId = setInterval(this.save, 5000);\n    },\n    stopInterval() {\n      if (this.intervalId) {\n        clearInterval(this.intervalId);\n      }\n    },\n    async init() {\n      Api.getBaseConfig()\n        .then((res) => {\n          console.log(res);\n          if (res.Status) {\n            var Data = res.Data;\n            this.largeModelList = ref(Data.largeModelList);\n            this.pluginsList = Data.pluginsList;\n            this.agentList = Data.agentList;\n            this.knowledgeBaseList = Data.knowledgeBaseList;\n          }\n          this.getWorkFlow();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    getWorkFlow() {\n      var that = this;\n      Api.getWorkFlow(\n        that.workflow_data.WorkFlowID,\n        that.workflow_data.MainID,\n        that.workflow_data.MainType\n      )\n        .then((res) => {\n          if (res.Status) {\n            var Data = res.Data;\n\n            this.info = Object.assign({}, this.info, Data.Info);\n\n            Data.Nodes.map((x) => {\n              this.nodes.push(x.Config);\n            });\n            Data.Edges.map((x) => {\n              this.edges.push(x.Config);\n            });\n\n            this.$forceUpdate();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    save(info = null) {\n      var that = this;\n\n      var _WorkFlowID = that.workflow_data.WorkFlowID;\n      var _Info = that.info;\n      if (info != null) {\n        _Info.WorkflowName = info.WorkflowName;\n        _Info.Description = info.Description;\n      }\n\n      var _Nodes = this._toObject().nodes.map((item) => {\n        return {\n          NodeID: item.id,\n          WorkFlowID: _WorkFlowID,\n          NodeType: item.type,\n          NodeName: item.data.label,\n          Description: item.data.label,\n          Config: item,\n        };\n      });\n      var _Edges = this._toObject().edges.map((item) => {\n        return {\n          EdgeID: item.id,\n          WorkFlowID: _WorkFlowID,\n          SourceNodeId: item.source,\n          TargetNodeId: item.target,\n          Condition: \"\",\n          LName: \"\",\n          Config: item,\n        };\n      });\n      var _data = {\n        Info: _Info,\n        Nodes: _Nodes,\n        Edges: _Edges,\n        WorkFlowID: _WorkFlowID,\n        MainID: that.workflow_data.MainID,\n        MainType: that.workflow_data.MainType,\n      };\n\n      Api.subWorkFlow(_data)\n        .then((res) => {\n          console.log(res);\n          if (res.Status) {\n            that.workflow_data.WorkFlowID = res.Data;\n            that.info.LastUpdateTime = new Date().toLocaleString();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  },\n};\n</script>\n\n<template>\n  <VueFlow\n    ref=\"vueFlow\"\n    :nodes=\"nodes\"\n    :edges=\"edges\"\n    :class=\"{ dark }\"\n    class=\"basic-flow\"\n    :default-viewport=\"{ zoom: 1.5 }\"\n    :min-zoom=\"0.2\"\n    :max-zoom=\"4\"\n    :apply-default=\"false\"\n    fit-view-on-init\n    @nodes-change=\"onNodesChange\"\n    @edges-change=\"onEdgesChange\"\n    @edgeClick=\"edgeClick\"\n    @nodeClick=\"nodeClick\"\n    :connection-line-style=\"connectionLineStyle\"\n  >\n    <Background pattern-color=\"#f0f0f0\" :gap=\"15\" />\n    <WorkFlowData class=\"vue-flow__panel top left\"></WorkFlowData>\n    <MiniMap position=\"bottom-left\" class=\"MiniMap\"></MiniMap>\n    <Controls position=\"bottom-left\">\n      <ControlButton title=\"Reset Transform\" @click=\"resetTransform\">\n        <ToolIcon name=\"reset\" />\n      </ControlButton>\n\n      <ControlButton title=\"Toggle Dark Mode\" @click=\"toggleDarkMode\">\n        <ToolIcon v-if=\"dark\" name=\"sun\" />\n        <ToolIcon v-else name=\"moon\" />\n      </ControlButton>\n\n      <ControlButton title=\"Log `toObject`\" @click=\"logToObject\">\n        <ToolIcon name=\"log\" />\n      </ControlButton>\n    </Controls>\n    <Panel class=\"WorkFlowInfo vue-flow__panel top left vue-flow__controls\">\n      <WorkFlowInfo v-model:info=\"info\" @save=\"save\"> </WorkFlowInfo>\n    </Panel>\n\n    <Panel class=\"ToolBox vue-flow__panel top left vue-flow__controls\">\n      <ToolBox\n        :is-visible=\"ShowNodeBox\"\n        :workflow-i-d=\"workflow_data.WorkFlowID\"\n        :main-i-d=\"workflow_data.MainID\"\n        :nodeClass=\"workflow_data.MainType\"\n        @addNode=\"addNode\"\n      ></ToolBox>\n      <ControlButton @click=\"onShowNodeBox\">\n        <ToolIcon v-if=\"!ShowNodeBox\" name=\"zoomin\" />\n        <ToolIcon v-else name=\"zoomout\" />\n      </ControlButton>\n    </Panel>\n\n    <template #edge-custom=\"props\">\n      <CustomEdge\n        :id=\"props.id\"\n        :source-x=\"props.sourceX\"\n        :source-y=\"props.sourceY\"\n        :target-x=\"props.targetX\"\n        :target-y=\"props.targetY\"\n        :source-position=\"props.sourcePosition\"\n        :target-position=\"props.targetPosition\"\n        :data=\"props.data\"\n        :marker-end=\"props.markerEnd\"\n        :style=\"props.style\"\n      />\n    </template>\n\n    <template #node-Start=\"props\">\n      <StartNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        @saveNode=\"saveNode\"\n      ></StartNode>\n    </template>\n    <template #node-End=\"props\">\n      <EndNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        @saveNode=\"saveNode\"\n      ></EndNode>\n    </template>\n    <template #node-LargeModel=\"props\">\n      <LargeModelNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :largeModel=\"largeModelList\"\n        :plugins=\"pluginsList\"\n        @saveNode=\"saveNode\"\n      ></LargeModelNode>\n    </template>\n    <template #node-KnowledgeBase=\"props\">\n      <KnowledgeBaseNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :knowledgeBase=\"knowledgeBaseList\"\n        @saveNode=\"saveNode\"\n      ></KnowledgeBaseNode>\n    </template>\n    <template #node-Plugins=\"props\">\n      <PluginsNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :plugins=\"pluginsList\"\n        @saveNode=\"saveNode\"\n      ></PluginsNode>\n    </template>\n    <template #node-Selector=\"props\">\n      <SelectorNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        @saveNode=\"saveNode\"\n      ></SelectorNode>\n    </template>\n\n    <template #node-TimeTrigger=\"props\">\n      <TimeTrigger\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        @saveNode=\"saveNode\"\n      ></TimeTrigger>\n    </template>\n\n    <template #node-MainAI=\"props\">\n      <MainAINode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :largeModel=\"largeModelList\"\n        :plugins=\"pluginsList\"\n        @saveNode=\"saveNode\"\n      ></MainAINode>\n    </template>\n\n    <template #node-Agent=\"props\">\n      <AgentNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :agents=\"agentList\"\n        @saveNode=\"saveNode\"\n      ></AgentNode>\n    </template>\n\n    <template #node-Reporter=\"props\">\n      <ReporterNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :largeModel=\"largeModelList\"\n        @saveNode=\"saveNode\"\n      ></ReporterNode>\n    </template>\n  </VueFlow>\n</template>\n","import axios from \"axios\";\n\nconst apiClient = axios.create({\n  baseURL: \"http://192.168.0.28:5002\", //http://192.168.0.28:5002\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nclass ApiService {\n  static get(url) {\n    return apiClient.get(url).then((response) => response.data);\n  }\n\n  static post(url, data, config) {\n    return apiClient.post(url, data, config).then((response) => response.data);\n  }\n\n  static put(url, data) {\n    return apiClient.put(url, data).then((response) => response.data);\n  }\n\n  static delete(url) {\n    return apiClient.delete(url).then(() => true);\n  }\n\n  static getBaseConfig() {\n    return this.get(\"/Manage/Workflow/getBaseConfig\");\n  }\n\n  static getWorkFlow(WorkflowID, MainID, MainType) {\n    return this.post(\n      \"/Manage/Workflow/getWorkFlow\",\n      {\n        WorkflowID,\n        MainID,\n        MainType,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\", // 设置请求头，确保服务器正确解析 FormData\n        },\n      }\n    );\n  }\n\n  static addNode(NodeType, WorkflowID, MainID) {\n    return this.post(\n      \"/Manage/Workflow/addNode\",\n      {\n        WorkflowID,\n        NodeType,\n        MainID,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\", // 设置请求头，确保服务器正确解析 FormData\n        },\n      }\n    );\n  }\n\n  static subWorkFlow(Data) {\n    return this.post(\"/Manage/Workflow/Save\", Data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n\n  static getNodeExcutionRecord(workflowID, nodeID) {\n    return this.post(\"getNodeExcutionRecord\", { workflowID, nodeID });\n  }\n\n  static getChatLog(ChatSessionID) {\n    return this.post(\"getChatLog\", { ChatSessionID });\n  }\n}\n\nexport default ApiService;\n","class Tools {\n  static guid = function () {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n      /[xy]/g,\n      function (c) {\n        var r = (Math.random() * 16) | 0,\n          v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      }\n    );\n  };\n}\n\nexport default Tools;\n","import script from \"./ToolIcon.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ToolIcon.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"isVisible\" class=\"NodeToolBox\">\n    <div class=\"title\">选择节点</div>\n    <div class=\"items iconfont\">\n      <ul>\n        <li\n          v-for=\"(item, i) in NodeList.filter(\n            (item) => item.NodeClass == (nodeClass == 1 ? 'App' : 'Agent')\n          )\"\n          :key=\"i\"\n          @click=\"addNode(item.NodeType)\"\n        >\n          <div class=\"Icon\" :class=\"item.Icon\"></div>\n          <div class=\"Name\">{{ item.NodeName }}</div>\n          <div class=\"Icon RBt icon-jinrujiantouxiao\"></div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n<script setup></script>\n\n<script>\nimport Api from \"../common/API.js\";\n\nimport { notify } from \"@kyvg/vue3-notification\";\n\nexport default {\n  name: \"ToolBox\",\n  props: {\n    node: Object,\n    workflowID: String,\n    mainID: String,\n    isVisible: Boolean,\n    nodeClass: Number,\n  },\n  data() {\n    return {\n      NodeList: [\n        {\n          NodeName: \"大模型\",\n          NodeType: \"LargeModel\",\n          Icon: \"icon-LargeModel\",\n          Description: \"调用大语言模型，处理变量，配合提示词，生成输出\",\n          NodeClass: \"Agent\",\n        },\n        {\n          NodeName: \"知识库\",\n          NodeType: \"KnowledgeBase\",\n          Icon: \"icon-KnowledgeBase\",\n          Description: \"根据输入的文本，调用知识库，获取知识库数据\",\n          NodeClass: \"Agent\",\n        },\n        {\n          NodeName: \"插件\",\n          NodeType: \"Plugins\",\n          Icon: \"icon-Plugins\",\n          Description: \"插件可以提供更多能力，外部操作，获取外部数据等\",\n          NodeClass: \"Agent\",\n        },\n        {\n          NodeName: \"选择器\",\n          NodeType: \"Selector\",\n          Icon: \"icon-selector1\",\n          Description: \"可以通过选择器的定义，链接多个下游执行节点\",\n          NodeClass: \"Agent\",\n        },\n        {\n          NodeName: \"Agent\",\n          NodeType: \"Agent\",\n          Icon: \"icon-Agent\",\n          Description: \"调用Agent可以实现更多复杂组合\",\n          NodeClass: \"App\",\n        },\n        {\n          NodeName: \"时间触发器\",\n          NodeType: \"TimeTrigger\",\n          Icon: \"icon-TimeTrigger\",\n          Description: \"可以定义一个特定时间点来触发下个节点\",\n          NodeClass: \"App\",\n        },\n        /*\n        {\n          NodeName: \"主控AI\",\n          NodeType: \"MainAI\",\n          Icon: \"icon-MainAI\",\n          Description: \"主导应用的核心AI，可以调用多个Agent\",\n          NodeClass: \"App\",\n        },\n        {\n          NodeName: \"记录员\",\n          NodeType: \"Reporter\",\n          Icon: \"icon-Reporter\",\n          Description:\n            \"记录会话内容，并进行必要的摘要与整理，减少回话上下文长度，提高会话质量\",\n          NodeClass: \"App\",\n        },\n*/\n      ],\n    };\n  },\n  methods: {\n    addNode(NodeType) {\n      Api.addNode(NodeType, this.workflowID, this.mainID).then((res) => {\n        console.log(res);\n        if (res.Status) {\n          var Data = res.Data;\n\n          this.$emit(\"addNode\", Data.Config);\n        } else {\n          notify({ type: \"warn\", title: \"Warn\", text: res.ErrorDesc });\n        }\n      });\n    },\n  },\n};\n</script>\n","import { render } from \"./ToolBox.vue?vue&type=template&id=76b605c6\"\nimport script from \"./ToolBox.vue?vue&type=script&lang=js\"\nexport * from \"./ToolBox.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"WorkFlowInfo\" @click=\"toggleDialog\">\n    <div class=\"Title\">{{ info.WorkflowName }}</div>\n    <div class=\"LastUpdateTime\">{{ new Date(info.LastUpdateTime).toLocaleString() }}</div>\n  </div>\n\n  <el-dialog v-model=\"dialogFormVisible\" title=\"工作流信息\" width=\"500\">\n    <el-form :model=\"form\" label-width=\"auto\">\n      <el-form-item label=\"工作流名称\" label-position=\"right\">\n        <el-input v-model=\"Info.WorkflowName\" autocomplete=\"off\" />\n      </el-form-item>\n      <el-form-item label=\"说明\" label-position=\"right\">\n        <el-input\n          v-model=\"Info.Description\"\n          show-word-limit\n          maxlength=\"128\"\n          type=\"textarea\"\n        ></el-input>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <div class=\"dialog-footer\">\n        <el-button @click=\"closeDialog\">取消</el-button>\n        <el-button type=\"primary\" @click=\"save\">保存</el-button>\n      </div>\n    </template>\n  </el-dialog>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from \"vue\";\n\nexport default {\n  name: \"WorkFlowInfo\",\n  props: {\n    node: Object,\n    workflowID: String,\n    isVisible: Boolean,\n    info: Object,\n  },\n  setup(props) {\n    const dialogFormVisible = ref(false);\n    const Info = ref({});\n\n    onMounted(() => {\n      Info.value = { ...props.info };\n    });\n    watch(\n      () => props.info,\n      (newInfo) => {\n        Info.value = { ...newInfo };\n      },\n      { immediate: true }\n    );\n    const toggleDialog = () => {\n      dialogFormVisible.value = !dialogFormVisible.value;\n    };\n\n    const closeDialog = () => {\n      dialogFormVisible.value = false;\n    };\n\n    return { dialogFormVisible, Info, toggleDialog, closeDialog };\n  },\n  methods: {\n    show() {\n      this.dialogFormVisible = !this.dialogFormVisible;\n    },\n    save() {\n      this.$emit(\"save\", this.Info);\n      this.dialogFormVisible = false;\n    },\n  },\n};\n</script>\n","import { render } from \"./WorkFlowInfo.vue?vue&type=template&id=34435240\"\nimport script from \"./WorkFlowInfo.vue?vue&type=script&lang=js\"\nexport * from \"./WorkFlowInfo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n<div class=\"WorkFlowData\">\n    <div class=\"title\">{{title}}</div>\n</div>\n</template>\n<script>\nexport default {\n  name: \"WorkFlowData\",\n  props: {\n    title: String,\n  },\n};\n</script>\n","import { render } from \"./WorkFlowData.vue?vue&type=template&id=e84c9d3e\"\nimport script from \"./WorkFlowData.vue?vue&type=script&lang=js\"\nexport * from \"./WorkFlowData.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"slider-input\">\n    <input\n      type=\"range\"\n      :min=\"min\"\n      :max=\"max\"\n      v-model=\"inputValue\"\n      @input=\"updateValue($event.target.value)\"\n      @mousedown.stop=\"handleRangeMouseDown\"\n    />\n    <span>{{ inputValue }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    modelValue: {\n      type: Number,\n      default: 0,\n    },\n    min: {\n      type: Number,\n      default: 0,\n    },\n    max: {\n      type: Number,\n      default: 100,\n    },\n  },\n  setup() {\n    const handleRangeMouseDown = () => {\n      return;\n    };\n\n    return { handleRangeMouseDown };\n  },\n  data() {\n    return {\n      inputValue: this.modelValue,\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.inputValue = newValue;\n    },\n  },\n  methods: {\n    updateValue(value) {\n      this.inputValue = value;\n      this.$emit(\"update:modelValue\", value);\n    },\n  },\n};\n</script>\n\n<style>\n.slider-input{\nwidth: 100%;}\n.slider-input input {\n  width: 100%;\n}\n.slider-input span {\n  margin-left: 10px;\n}\n</style>\n","import { render } from \"./SliderInput.vue?vue&type=template&id=612dccbc\"\nimport script from \"./SliderInput.vue?vue&type=script&lang=js\"\nexport * from \"./SliderInput.vue?vue&type=script&lang=js\"\n\nimport \"./SliderInput.vue?vue&type=style&index=0&id=612dccbc&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\nimport Multiselect from \"vue-multiselect\";\nimport SliderInput from \"../SliderInput.vue\";\n</script>\n<script>\nexport default {\n  name: \"LargeModelNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    largeModel: Object,\n    plugins: Object,\n  },\n  components: { Multiselect, SliderInput },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      largeModelList: this.largeModel,\n      pluginsList: this.plugins,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_prompt: true,\n      isFold_largemodel: true,\n      isFold_plugins: true,\n      isFold_plugins2: true,\n      isFold_Coefficient: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: { ...this.nodeData, label: this.label },\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    checkFoldLargeModel() {\n      this.isFold_largemodel = !this.isFold_largemodel;\n    },\n    checkFoldPlugins() {\n      this.isFold_plugins = !this.isFold_plugins;\n    },\n    checkFoldPlugins2() {\n      this.isFold_plugins2 = !this.isFold_plugins2;\n    },\n    checkCoefficient() {\n      this.isFold_Coefficient = !this.isFold_Coefficient;\n    },\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div\n    class=\"NodeBox LargeModelNode iconfont\"\n    :class=\"[isSelected ? 'Selected' : '', '']\"\n  >\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-LargeModel\"></span>\n      <span>大语言模型</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">调用大语言模型，处理变量，配合提示词，生成输出</div>\n      <div class=\"LargeModel Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_largemodel ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldLargeModel\"\n          ></span>\n          <span>模型</span>\n        </div>\n        <div v-if=\"isFold_largemodel\">\n          <select v-model=\"nodeData.model.LargeModelID\">\n            <option\n              v-for=\"(item, i) in largeModelList\"\n              :key=\"i\"\n              :value=\"item.LargeModelID\"\n            >\n              {{ item.ModelOrganizationName }}({{ item.Name }})\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_plugins ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPlugins\"\n          ></span>\n          <span>提示词函数(插件)</span>\n        </div>\n        <div v-if=\"isFold_plugins\">\n          <multiselect\n            v-model=\"nodeData.SemanticFunction\"\n            placeholder=\"请选择函数\"\n            :multiple=\"true\"\n            :close-on-select=\"false\"\n            :clear-on-select=\"false\"\n            :preserve-search=\"true\"\n            label=\"Name\"\n            track-by=\"Name\"\n            taggable=\"true\"\n            :options=\"pluginsList.filter((value) => value.PluginsType == 1)\"\n          ></multiselect>\n        </div>\n      </div>\n      <div class=\"Plugins Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_plugins2 ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPlugins2\"\n          ></span>\n          <span>原生函数(插件)</span>\n        </div>\n        <div v-if=\"isFold_plugins2\">\n          <multiselect\n            v-model=\"nodeData.NativeFunction\"\n            placeholder=\"请选择函数\"\n            :multiple=\"true\"\n            :close-on-select=\"false\"\n            :clear-on-select=\"false\"\n            :preserve-search=\"true\"\n            label=\"Name\"\n            track-by=\"Name\"\n            taggable=\"true\"\n            :options=\"pluginsList.filter((value) => value.PluginsType == 2)\"\n          ></multiselect>\n        </div>\n      </div>\n\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_inputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldInputs\"\n          ></span>\n          <span>输入</span>\n        </div>\n        <div v-if=\"isFold_inputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.inputs\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词（将输入变量与提示词整理，并让AI重新生成返回结果）</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n            v-model=\"nodeData.prompt\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '请输入提示词：' +\n                nodeData.inputs.map((item) => '{{' + item.varname + '}}').join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Coefficient Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_Coefficient ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkCoefficient\"\n          ></span>\n          <span>系数设置</span>\n        </div>\n        <div v-if=\"isFold_Coefficient\">\n          <el-form label-width=\"auto\" style=\"max-width: 600px\" status-icon>\n            <el-form-item label=\"随机性(值越大越有创造力)\"\n              ><SliderInput v-model=\"nodeData.temperature\" min=\"0\" max=\"100\"\n            /></el-form-item>\n            <el-form-item label=\"多样性(值越大越有多样性)\"\n              ><SliderInput v-model=\"nodeData.topp\" min=\"0\" max=\"100\"\n            /></el-form-item>\n          </el-form>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./LargeModelNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LargeModelNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\n</script>\n<script>\nexport default {\n  name: \"PluginsNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    plugins: Object,\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      pluginsList: this.plugins,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_plugins: true,\n    };\n  },\n  methods: {\n    saveNode() {\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: { ...this.nodeData, label: this.label },\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPlugins() {\n      this.isFold_plugins = !this.isFold_plugins;\n    },\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div class=\"NodeBox Plugins iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-Plugins\"></span>\n      <span>插件</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">插件可以提供更多能力，外部操作，获取外部数据等</div>\n      <div class=\"Plugins Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_plugins ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPlugins\"\n          ></span>\n          <span>插件</span>\n        </div>\n        <div v-if=\"isFold_plugins\">\n          <select v-model=\"nodeData.plugins.PluginsID\">\n            <option v-for=\"(item, i) in pluginsList.filter(value =>value.PluginsType==0)\" :key=\"i\" :value=\"item.PluginsID\">\n              {{ item.Name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_inputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldInputs\"\n          ></span>\n          <span>输入</span>\n        </div>\n        <div v-if=\"isFold_inputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.inputs\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./PluginsNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PluginsNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\n</script>\n<script>\nexport default {\n  name: \"StartNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_prompt: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: { ...this.nodeData, label: this.label },\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div class=\"NodeBox StartNode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-start\"></span>\n      <span>开始</span>\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">工作流的起始节点，用于设定启动工作流需要的信息</div>\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_inputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldInputs\"\n          ></span>\n          <span>输入</span>\n        </div>\n        <div v-if=\"isFold_inputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.inputs\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n            v-model=\"nodeData.prompt\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '请输入提示词：' +\n                nodeData.inputs.map((item) => '{{' + item.varname + '}}').join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./StartNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StartNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\n</script>\n<script>\nexport default {\n  name: \"EndNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_prompt: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: { ...this.nodeData, label: this.label },\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <div class=\"NodeBox EndNode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-end\"></span>\n      <span>结束</span>\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">工作流的结束节点，用于返回工作流运行后的结果信息</div>\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_inputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldInputs\"\n          ></span>\n          <span>输入</span>\n        </div>\n        <div v-if=\"isFold_inputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.inputs\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>组织返回结果</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n            v-model=\"nodeData.prompt\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '需要将变量拼接在待返回的字符串中：' +\n                nodeData.inputs.map((item) => '{{' + item.varname + '}}').join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./EndNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EndNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\n\nimport Tools from \"../../common/Tools.js\";\n</script>\n<script>\nexport default {\n  name: \"SelectorNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n  },\n  created() {},\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_selector: true,\n      selectorList: this.data.selector\n        ? this.data.selector.map((item, i) => {\n            item.top = i * 25 + 240;\n            item.top_str = \"top:\" + item.top + \"px\";\n            return item;\n          })\n        : [],\n      comparison: [\n        { name: \"等于\", data: \"=\", text: \"等于\" },\n        { name: \"不等于\", data: \"!=\", text: \"不等于\" },\n        { name: \"大于\", data: \">\", text: \"大于\" },\n        { name: \"小于\", data: \"<\", text: \"小于\" },\n        { name: \"包含\", data: \"~=\", text: \"包含\" },\n        { name: \"不包含\", data: \"!~=\", text: \"不包含\" },\n      ],\n    };\n  },\n  methods: {\n    resetHandleTop() {\n      var vHeight = 185;\n      if (this.isFold_inputs) {\n        vHeight = vHeight + 55;\n      }\n      if (this.isFold_selector && this.isFold) {\n        if (this.isFold || this.isFold_inputs) {\n          this.selectorList = this.selectorList.map((item, i) => {\n            item.top = i * 25 + vHeight;\n            item.top_str = \"top:\" + item.top + \"px\";\n            return item;\n          });\n        }\n      } else {\n        this.selectorList = this.selectorList.map((item) => {\n          item.top = 0;\n          item.top_str = \"\";\n          return item;\n        });\n      }\n    },\n    saveNode() {\n      this.selectorList = this.selectorList.map((item) => {\n        item.selector.id = item.id;\n      });\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: { ...this.nodeData, label: this.label, selector: this.selectorList },\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n      this.resetHandleTop();\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n      this.resetHandleTop();\n    },\n    checkFoldSelector() {\n      this.isFold_selector = !this.isFold_selector;\n      this.resetHandleTop();\n    },\n    onAdd() {\n      //var id = this.selectorList.length + 1;\n      var top = this.selectorList.length * 25 + 240;\n      this.selectorList.push({\n        id: Tools.guid(),//\"condition_\" + id,\n        inputs: \"2\",\n        comparison: \"\",\n        value: \"\",\n        top: top,\n        top_str: \"top:\" + top + \"px\",\n      });\n      this.saveNode();\n    },\n    onDel(selector) {\n      this.selectorList = this.selectorList.filter((item) => item.id !== selector.id);\n      this.saveNode();\n    },\n  },\n};\n</script>\n\n<template>\n  <Handle\n    id=\"target_1\"\n    class=\"Handle\"\n    type=\"target\"\n    :position=\"Position.Left\"\n    :style=\"{}\"\n  />\n  <div v-for=\"item in selectorList\" :key=\"item.id\">\n    <Handle\n      :id=\"item.id\"\n      class=\"Handle\"\n      type=\"source\"\n      :position=\"Position.Right\"\n      :style=\"item.top_str\"\n    />\n  </div>\n  <div class=\"NodeBox SelectorNode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-selector1\"></span>\n      <span>选择器</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">可以通过选择器的定义，链接多个下游执行节点</div>\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_inputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldInputs\"\n          ></span>\n          <span>输入</span>\n        </div>\n        <div v-if=\"isFold_inputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.inputs\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"Selector Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_selector ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldSelector\"\n          ></span>\n          <span>条件判断</span>\n        </div>\n        <div v-if=\"isFold_selector\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>判断条件</th>\n              <th>比较值</th>\n              <th>删除</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"item in selectorList\" :key=\"item.id\">\n                <td>\n                  <select v-model=\"item.varname\">\n                    <option\n                      v-for=\"(item, i) in nodeData.inputs\"\n                      :key=\"i\"\n                      :value=\"item.varname\"\n                    >\n                      {{ item.varname }}\n                    </option>\n                  </select>\n                </td>\n                <td>\n                  <select v-model=\"item.comparison\">\n                    <option\n                      v-for=\"_item in comparison\"\n                      :key=\"_item.name\"\n                      :value=\"_item.data\"\n                    >\n                      {{ _item.text }}\n                    </option>\n                  </select>\n                </td>\n                <td><input placeholder=\"留空代表字符串空\" v-model=\"item.value\" /></td>\n                <td>\n                  <span class=\"Icon ticon icon-del del\" @click=\"onDel(item)\"></span>\n                </td>\n              </tr>\n            </tbody>\n            <footer>\n              <tr>\n                <td colspan=\"4\" class=\"add\" @click=\"onAdd\">\n                  <span class=\"Icon ticon icon-add\"></span>\n                  <span>增加条件</span>\n                </td>\n              </tr>\n            </footer>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./SelectorNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SelectorNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\nimport Multiselect from \"vue-multiselect\";\n</script>\n<script>\nexport default {\n  name: \"KnowledgeBaseNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    knowledgeBase: Object,\n    largeModel: Object,\n  },\n  components: { Multiselect },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      largeModelList: this.largeModel,\n      KnowledgeBaseList: this.knowledgeBase,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_largemodel: true,\n      isFold_KnowledgeBase: true,\n    };\n  },\n  methods: {\n    saveNode() {\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: { ...this.nodeData, label: this.label },\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },checkFoldLargeModel() {\n      this.isFold_largemodel = !this.isFold_largemodel;\n    },\n    checkFoldKnowledgeBase() {\n      console.log(this.KnowledgeBaseList);\n      this.isFold_KnowledgeBase = !this.isFold_KnowledgeBase;\n    },\n  },\n};\n</script>\n<style src=\"vue-multiselect/dist/vue-multiselect.css\"></style>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div\n    class=\"NodeBox KnowledgeBaseNode iconfont\"\n    :class=\"[isSelected ? 'Selected' : '', '']\"\n  >\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-KnowledgeBase\"></span>\n      <span>知识库</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">根据输入的文本，调用知识库，获取知识库数据</div>\n\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_inputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldInputs\"\n          ></span>\n          <span>输入</span>\n        </div>\n        <div v-if=\"isFold_inputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.inputs\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div class=\"KnowledgeBase Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_KnowledgeBase ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldKnowledgeBase\"\n          ></span>\n          <span>知识库</span>\n        </div>\n        <div v-if=\"isFold_KnowledgeBase\">\n          <multiselect\n            v-model=\"nodeData.knowledgeBase\"\n            placeholder=\"请选择知识库\"\n            :multiple=\"true\"\n            :close-on-select=\"false\"\n            :clear-on-select=\"false\"\n            :preserve-search=\"true\"\n            label=\"Name\"\n            track-by=\"Name\"\n            taggable=\"true\"\n            :options=\"KnowledgeBaseList\"\n          ></multiselect>\n        </div>\n      </div>\n\n      <div class=\"LargeModel Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_largemodel ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldLargeModel\"\n          ></span>\n          <span>模型</span>\n        </div>\n        <div v-if=\"isFold_largemodel\">\n          <select v-model=\"nodeData.model.LargeModelID\">\n            <option\n              v-for=\"(item, i) in largeModelList\"\n              :key=\"i\"\n              :value=\"item.LargeModelID\"\n            >\n              {{ item.ModelOrganizationName }}({{ item.Name }})\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./KnowledgeBaseNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./KnowledgeBaseNode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"vue-multiselect/dist/vue-multiselect.css?vue&type=style&index=0&lang=css&external\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\n</script>\n<script>\nexport default {\n  name: \"TimeTriggerNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n  },\n  created() {},\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      isFold: true,\n      isFold_outputs: true,\n      isFold_TimeTrigger: true,\n      isFold_prompt: true,\n\n      loopType: [\n        { name: \"每隔n秒\", data: \"s\", text: \"每n秒\" },\n        { name: \"每隔n天\", data: \"d\", text: \"每n天\" },\n        { name: \"每周星期几\", data: \"w\", text: \"每周星期几\" },\n        { name: \"每月第几日\", data: \"m\", text: \"每月第几日\" },\n      ],\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: { ...this.nodeData, label: this.label },\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n      this.resetHandleTop();\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldTimeTrigger() {\n      this.isFold_TimeTrigger = !this.isFold_TimeTrigger;\n      this.resetHandleTop();\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n  },\n};\n</script>\n\n<template>\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div\n    class=\"NodeBox TimeTriggerNode iconfont\"\n    :class=\"[isSelected ? 'Selected' : '', '']\"\n  >\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-TimeTrigger\"></span>\n      <span>时间触发器</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">可以定义一个特定时间点来触发下个节点</div>\n\n      <div class=\"TimeTrigger Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_TimeTrigger ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldTimeTrigger\"\n          ></span>\n          <span>触发周期</span>\n        </div>\n        <div v-if=\"isFold_TimeTrigger\">\n          <el-form label-width=\"auto\" style=\"max-width: 600px\" status-icon>\n            <el-form-item label=\"循环类型\">\n              <el-select v-model=\"nodeData.timeTrigger.loopType\" placeholder=\"循环类型\">\n                <el-option\n                  v-for=\"_item in loopType\"\n                  :key=\"_item.name\"\n                  :value=\"_item.data\"\n                  :label=\"_item.text\"\n                />\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"周期\">\n              <el-input\n                v-model=\"nodeData.timeTrigger.IntervalValue\"\n                type=\"number\"\n                placeholder=\"循环类型N的值\"\n              />\n            </el-form-item>\n            <el-form-item\n              label=\"第一次开始时间\"\n              title=\"循环类型为日、周、月时该值的时间'hh:mm'为每次循环的开始时间\"\n            >\n              <el-date-picker\n                v-model=\"nodeData.timeTrigger.StartTime\"\n                type=\"datetime\"\n                placeholder=\"选择\"\n                :default-time=\"defaultTime\"\n              />\n            </el-form-item>\n            <el-form-item label=\"执行次数\">\n              <el-input\n                v-model=\"nodeData.timeTrigger.RepeatValue\"\n                type=\"number\"\n                placeholder=\"0等于无限次\"\n              />\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词（将输入变量与提示词整理，作为下个节点的输入参数）</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n            v-model=\"nodeData.prompt\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"['请输入提示词：{{currentTime}}']\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./TimeTrigger.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TimeTrigger.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\n</script>\n<script>\nexport default {\n  name: \"AgentNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    agents: Object,\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      agentList: this.agents,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_Agent: true,\n      isFold_prompt: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: { ...this.nodeData, label: this.label },\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldAgent() {\n      this.isFold_Agent = !this.isFold_Agent;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div class=\"NodeBox Agent iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-Agent\"></span>\n      <span>Agent</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">调用Agent可以实现更多复杂组合</div>\n      <div class=\"Agent Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_Agent ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldAgent\"\n          ></span>\n          <span>Agent</span>\n        </div>\n        <div v-if=\"isFold_Agent\">\n          <select v-model=\"nodeData.agent.AgentID\">\n            <option v-for=\"(item, i) in agentList\" :key=\"i\" :value=\"item.AgentID\">\n              {{ item.Name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>Agent说明(让主控AI更好的理解Agent的作用，并合理安排触发任务)</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n            v-model=\"nodeData.prompt\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '请输入Agent说明：' +\n                '输入参数:' +\n                nodeData.inputs.map((item) => '{{' + item.varname + '}}').join(','),\n              '输出参数:' +\n                nodeData.output.map((item) => '{{' + item.varname + '}}').join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_inputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldInputs\"\n          ></span>\n          <span>输入</span>\n        </div>\n        <div v-if=\"isFold_inputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.inputs\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" placeholder=\"input的txt等于上一节点output的varname\"/></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./AgentNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AgentNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\nimport Multiselect from \"vue-multiselect\";\nimport SliderInput from \"../SliderInput.vue\";\n</script>\n<script>\nexport default {\n  name: \"MainAINode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    largeModel: Object,\n    plugins: Object,\n  },\n  components: { Multiselect, SliderInput },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      largeModelList: this.largeModel,\n      pluginsList: this.plugins,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_prompt: true,\n      isFold_mainAI: true,\n      isFold_plugins: true,\n      isFold_plugins2: true,\n      isFold_Coefficient: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: { ...this.nodeData, label: this.label },\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    checkFoldMainAI() {\n      this.isFold_mainAI = !this.isFold_mainAI;\n    },\n    checkFoldPlugins() {\n      this.isFold_plugins = !this.isFold_plugins;\n    },\n    checkFoldPlugins2() {\n      this.isFold_plugins2 = !this.isFold_plugins2;\n    },\n    checkCoefficient() {\n      this.isFold_Coefficient = !this.isFold_Coefficient;\n    },\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div class=\"NodeBox MainAINode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-MainAI\"></span>\n      <span>主控AI</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">主导应用的核心AI，可以调用多个Agent</div>\n      <div class=\"LargeModel Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_mainAI ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldMainAI\"\n          ></span>\n          <span>模型</span>\n        </div>\n        <div v-if=\"isFold_mainAI\">\n          <select v-model=\"nodeData.model.LargeModelID\">\n            <option\n              v-for=\"(item, i) in largeModelList\"\n              :key=\"i\"\n              :value=\"item.LargeModelID\"\n            >\n              {{ item.ModelOrganizationName }}({{ item.Name }})\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_plugins ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPlugins\"\n          ></span>\n          <span>提示词函数(插件)</span>\n        </div>\n        <div v-if=\"isFold_plugins\">\n          <multiselect\n            v-model=\"nodeData.SemanticFunction\"\n            placeholder=\"请选择函数\"\n            :multiple=\"true\"\n            :close-on-select=\"false\"\n            :clear-on-select=\"false\"\n            :preserve-search=\"true\"\n            label=\"Name\"\n            track-by=\"Name\"\n            taggable=\"true\"\n            :options=\"pluginsList.filter((value) => value.PluginsType == 1)\"\n          ></multiselect>\n        </div>\n      </div>\n      <div class=\"Plugins Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_plugins2 ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPlugins2\"\n          ></span>\n          <span>原生函数(插件)</span>\n        </div>\n        <div v-if=\"isFold_plugins2\">\n          <multiselect\n            v-model=\"nodeData.NativeFunction\"\n            placeholder=\"请选择函数\"\n            :multiple=\"true\"\n            :close-on-select=\"false\"\n            :clear-on-select=\"false\"\n            :preserve-search=\"true\"\n            label=\"Name\"\n            track-by=\"Name\"\n            taggable=\"true\"\n            :options=\"pluginsList.filter((value) => value.PluginsType == 2)\"\n          ></multiselect>\n        </div>\n      </div>\n\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_inputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldInputs\"\n          ></span>\n          <span>输入</span>\n        </div>\n        <div v-if=\"isFold_inputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.inputs\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词（将输入变量与提示词整理，并让AI重新生成返回结果）</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n            v-model=\"nodeData.prompt\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '请输入提示词：' +\n                nodeData.inputs.map((item) => '{{' + item.varname + '}}').join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Coefficient Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_Coefficient ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkCoefficient\"\n          ></span>\n          <span>系数设置</span>\n        </div>\n        <div v-if=\"isFold_Coefficient\">\n          <el-form label-width=\"auto\" style=\"max-width: 600px\" status-icon>\n            <el-form-item label=\"随机性(值越大越有创造力)\"\n              ><SliderInput v-model=\"nodeData.temperature\" min=\"0\" max=\"100\"\n            /></el-form-item>\n            <el-form-item label=\"多样性(值越大越有多样性)\"\n              ><SliderInput v-model=\"nodeData.topp\" min=\"0\" max=\"100\"\n            /></el-form-item>\n          </el-form>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./MainAINode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MainAINode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport SliderInput from \"../SliderInput.vue\";\nimport { Check, Close } from \"@element-plus/icons-vue\";\n</script>\n<script>\nexport default {\n  name: \"ReporterNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    largeModel: Object,\n  },\n  components: { SliderInput },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      largeModelList: this.largeModel,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_prompt: true,\n      isFold_largemodel: true,\n      isFold_Coefficient: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: { ...this.nodeData, label: this.label },\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    checkFoldLargeModel() {\n      this.isFold_largemodel = !this.isFold_largemodel;\n    },\n    checkCoefficient() {\n      this.isFold_Coefficient = !this.isFold_Coefficient;\n    },\n  },\n};\n</script>\n<template>\n  <div class=\"NodeBox ReporterNode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-Reporter\"></span>\n      <span>记录员</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">\n        调用大语言模型，记录会话内容，并进行必要的摘要与整理，减少回话上下文长度，提高会话质量\n      </div>\n      <div class=\"LargeModel Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_largemodel ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldLargeModel\"\n          ></span>\n          <span>模型</span>\n        </div>\n        <div v-if=\"isFold_largemodel\">\n          <select v-model=\"nodeData.model.LargeModelID\">\n            <option\n              v-for=\"(item, i) in largeModelList\"\n              :key=\"i\"\n              :value=\"item.LargeModelID\"\n            >\n              {{ item.ModelOrganizationName }}({{ item.Name }})\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词（将输入变量与提示词整理，并让AI重新生成返回结果）</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n            v-model=\"nodeData.prompt\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '请输入提示词：' +\n                nodeData.inputs.map((item) => '{{' + item.varname + '}}').join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Coefficient Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_Coefficient ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkCoefficient\"\n          ></span>\n          <span>系数设置</span>\n        </div>\n        <div v-if=\"isFold_Coefficient\">\n          <el-form label-width=\"auto\" style=\"max-width: 600px\" status-icon>\n            <el-form-item label=\"是否启用\">\n              <el-switch\n                v-model=\"nodeData.enable\"\n                class=\"mt-2\"\n                style=\"margin-left: 10px\"\n                inline-prompt\n                :active-icon=\"Check\"\n                :inactive-icon=\"Close\"\n            /></el-form-item>\n            <el-form-item label=\"随机性(值越大越有创造力)\"\n              ><SliderInput v-model=\"nodeData.temperature\" min=\"0\" max=\"100\"\n            /></el-form-item>\n            <el-form-item label=\"多样性(值越大越有多样性)\"\n              ><SliderInput v-model=\"nodeData.topp\" min=\"0\" max=\"100\"\n            /></el-form-item>\n            <el-form-item label=\"每次总结记录数(会话条数)\"\n              ><SliderInput v-model=\"nodeData.recordslength\" min=\"0\" max=\"100\"\n            /></el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./ReporterNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReporterNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { BaseEdge, getBezierPath } from \"@vue-flow/core\";\nimport { computed, defineProps } from \"vue\";\n\nconst props = defineProps({\n  id: {\n    type: String,\n    required: true,\n  },\n  sourceX: {\n    type: Number,\n    required: true,\n  },\n  sourceY: {\n    type: Number,\n    required: true,\n  },\n  targetX: {\n    type: Number,\n    required: true,\n  },\n  targetY: {\n    type: Number,\n    required: true,\n  },\n  sourcePosition: {\n    type: String,\n    required: true,\n  },\n  targetPosition: {\n    type: String,\n    required: true,\n  },\n  data: {\n    type: Object,\n    required: false,\n  },\n  markerEnd: {\n    type: String,\n    required: false,\n  },\n  style: {\n    type: Object,\n    required: false,\n  },\n});\n\nconst path = computed(() => getBezierPath(props));\n</script>\n\n<script>\nexport default {\n  inheritAttrs: false,\n};\n</script>\n\n<template>\n  <BaseEdge\n    :id=\"id\"\n    :style=\"style\"\n    :path=\"path[0]\"\n    :marker-end=\"markerEnd\"\n    :label=\"data.text\"\n    :label-x=\"path[1]\"\n    :label-y=\"path[2]\"\n    :label-style=\"{ fill: 'white' }\"\n    :label-show-bg=\"true\"\n    :label-bg-style=\"{ fill: 'red' }\"\n    :label-bg-padding=\"[2, 4]\"\n    :label-bg-border-radius=\"2\"\n  />\n  <g>\n    <!-- 圆形markStart -->\n    <circle :cx=\"props.sourceX\" :cy=\"props.sourceY\" r=\"4\" fill=\"#29a3ff\" />\n    <!-- path -->\n    <path :d=\"path\" fill=\"none\" stroke=\"#29a3ff\" stroke-width=\"2\" />\n    <!-- 箭头markEnd -->\n    <path\n      :transform=\"transform\"\n      :d=\"`M ${targetX} ${targetY + 2} L ${targetX - 5} ${targetY - 10} L ${\n        targetX + 5\n      } ${targetY - 10} Z`\"\n      fill=\"#3e47de\"\n      stroke=\"none\"\n    />\n  </g>\n</template>\n","import script from \"./CustomEdge.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CustomEdge.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./WorkFlow.vue?vue&type=template&id=965bb4bc\"\nimport script from \"./WorkFlow.vue?vue&type=script&lang=js\"\nexport * from \"./WorkFlow.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\nimport WorkFlow from \"./components/WorkFlow.vue\";\n</script>\n\n<script>\nexport default {\n  name: \"App\",\n  components: {\n    WorkFlow,\n  },\n  created() {\n    this.parseUrlParams();\n  },\n  methods: {\n    parseUrlParams() {\n      //http://192.168.0.18:8080/?WorkFlowID=9009b99f-4520-404d-811e-f36bab2d58cb&MainID=fcfc641f-36fb-4976-b261-4d83c0502854&MainType=1\n      //http://192.168.0.28:8080/?WorkFlowID=a138adda-c718-4a27-a2b5-c836ac68e076&MainID=020db83fc1d39990448074b97e938b52&MainType=2\n      const urlParams = new URLSearchParams(window.location.search);\n      this.workflow_data.WorkFlowID = urlParams.get(\"WorkFlowID\");\n      this.workflow_data.MainID = urlParams.get(\"MainID\");\n      this.workflow_data.MainType = urlParams.get(\"MainType\");\n    },\n  },\n  data() {\n    return {\n      workflow_data: {\n        title: \"工作流\",\n        info: null,\n        WorkFlowID: \"\",\n        MainID: \"\",\n        MainType: 2,\n      },\n    };\n  },\n};\n</script>\n\n<template>\n  <WorkFlow :workflow_data=\"workflow_data\"></WorkFlow>\n  <notifications />\n</template>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport '@/common/style.scss'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport Notifications from '@kyvg/vue3-notification'\n\nconst app = createApp(App);\napp.use(ElementPlus)\napp.use(Notifications);\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkworkflow\"] = self[\"webpackChunkworkflow\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(4049); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_VueFlow","ref","nodes","$data","edges","class","_normalizeClass","dark","zoom","onNodesChange","_ctx","onEdgesChange","onEdgeClick","$options","edgeClick","onNodeClick","nodeClick","connectionLineStyle","_withCtx","props","_createVNode","_component_CustomEdge","id","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","data","markerEnd","style","_normalizeStyle","_component_StartNode","isSelected","selected","onSaveNode","saveNode","_component_EndNode","_component_LargeModelNode","largeModel","largeModelList","plugins","pluginsList","_component_KnowledgeBaseNode","knowledgeBase","knowledgeBaseList","_component_PluginsNode","_component_SelectorNode","_component_TimeTrigger","_component_MainAINode","_component_AgentNode","agents","agentList","_component_ReporterNode","default","_component_Background","gap","_component_WorkFlowData","_component_MiniMap","position","_component_Controls","_component_ControlButton","title","onClick","resetTransform","_component_ToolIcon","name","_","toggleDarkMode","key","logToObject","_component_Panel","_component_WorkFlowInfo","info","_cache","$event","onSave","save","_component_ToolBox","ShowNodeBox","$props","workflow_data","WorkFlowID","MainID","nodeClass","MainType","onAddNode","addNode","onShowNodeBox","apiClient","axios","create","baseURL","headers","ApiService","get","url","then","response","post","config","put","delete","getBaseConfig","this","getWorkFlow","WorkflowID","NodeType","subWorkFlow","Data","getNodeExcutionRecord","workflowID","nodeID","getChatLog","ChatSessionID","Tools","_defineProperty","replace","c","r","Math","random","v","toString","__exports__","_createElementVNode","isVisible","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","NodeList","filter","item","NodeClass","i","Icon","_hoisted_5","_toDisplayString","NodeName","_hoisted_6","_hoisted_4","_createCommentVNode","node","Object","String","mainID","Boolean","Number","Description","methods","Api","res","console","log","Status","$emit","Config","notify","type","text","ErrorDesc","args","$setup","toggleDialog","WorkflowName","Date","LastUpdateTime","toLocaleString","_component_el_dialog","modelValue","dialogFormVisible","width","footer","_component_el_button","closeDialog","_createTextVNode","_component_el_form","model","form","_component_el_form_item","label","_component_el_input","Info","autocomplete","maxlength","setup","onMounted","value","watch","newInfo","immediate","show","min","max","inputValue","onInput","updateValue","target","onMousedown","_withModifiers","handleRangeMouseDown","newValue","__default__","components","Multiselect","SliderInput","nodeData","isFold","isFold_inputs","isFold_outputs","isFold_prompt","isFold_largemodel","isFold_plugins","isFold_plugins2","isFold_Coefficient","saveLabel","checkFold","checkFoldInputs","checkFoldOutputs","checkFoldPrompt","checkFoldLargeModel","checkFoldPlugins","checkFoldPlugins2","checkCoefficient","created","isFold_selector","selectorList","selector","map","top","top_str","comparison","resetHandleTop","vHeight","checkFoldSelector","onAdd","length","push","guid","inputs","onDel","KnowledgeBaseList","isFold_KnowledgeBase","checkFoldKnowledgeBase","isFold_TimeTrigger","loopType","checkFoldTimeTrigger","isFold_Agent","checkFoldAgent","isFold_mainAI","checkFoldMainAI","inheritAttrs","__props","path","computed","getBezierPath","workflow","VueFlow","Background","MiniMap","ToolBox","WorkFlowInfo","Controls","ToolIcon","ControlButton","WorkFlowData","LargeModelNode","PluginsNode","StartNode","EndNode","SelectorNode","TimeTrigger","AgentNode","MainAINode","ReporterNode","CustomEdge","KnowledgeBaseNode","onInit","onNodeDragStop","onConnect","addEdges","setViewport","toObject","applyNodeChanges","applyEdgeChanges","useVueFlow","vueFlowInstance","fitView","connection","MarkerType","ArrowClosed","changes","nextChanges","change","selectedNode","_setViewport","_toObject","mounted","_this","init","startInterval","unmount","stopInterval","selectEdge","stroke","strokeWidth","intervalId","x","y","nodeObj","edge","setInterval","clearInterval","catch","err","that","assign","Nodes","Edges","$forceUpdate","_WorkFlowID","_Info","_Nodes","NodeID","_Edges","EdgeID","SourceNodeId","source","TargetNodeId","Condition","LName","_data","render","WorkFlow","parseUrlParams","urlParams","URLSearchParams","window","location","search","app","createApp","App","use","ElementPlus","Notifications","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}